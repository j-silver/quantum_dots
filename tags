!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	/media/SPACE/PHD/programs/src/Makefile	/^CC = gcc$/;"	m	language:Make
CFLAGS	/media/SPACE/PHD/programs/src/Makefile	/^CFLAGS = -g -Wall -O2 #-pedantic -ansi -W -Wmissing-prototypes -Wstrict-prototypes  -Wconversion -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Wnested-externs -fshort-enums -fno-common $/;"	m	language:Make
CPPFLAGS	/media/SPACE/PHD/programs/src/Makefile	/^	CPPFLAGS = $(headers_for_intelc)$/;"	m	language:Make
D	/media/SPACE/PHD/programs/src/main.c	/^const double D = 1.0 ;                         \/* pumping amplitude *\/$/;"	v	language:C
LDLIBS	/media/SPACE/PHD/programs/src/Makefile	/^	LDLIBS = $(libs_for_intelc)$/;"	m	language:Make
LDLIBS	/media/SPACE/PHD/programs/src/Makefile	/^LDLIBS = -lgsl -lgslcblas -lm$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^	MAIN = main-clang$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^	MAIN = main-intel$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^MAIN = main$/;"	m	language:Make
Omega	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
Omega	/media/SPACE/PHD/programs/src/main.c	/^const double Omega = 2.0 ;                     \/* pumping frequency *\/$/;"	v	language:C
POW_2	/media/SPACE/PHD/programs/src/cp_gen.c	52;"	d	language:C	file:
POW_2	/media/SPACE/PHD/programs/src/funcs.h	36;"	d	language:C++
POW_2	/media/SPACE/PHD/programs/src/red_gen.c	52;"	d	language:C	file:
T	/media/SPACE/PHD/programs/src/main.c	/^const double T = 0.1 ;                           \/* temperature *\/$/;"	v	language:C
WS_SZ	/media/SPACE/PHD/programs/src/funcs.h	35;"	d	language:C++
alpha	/media/SPACE/PHD/programs/src/funcs.h	/^	double omega_1; double alpha; } ;$/;"	m	language:C++	struct:f_params
alpha	/media/SPACE/PHD/programs/src/main.c	/^const double alpha = 5e-3 ;                    \/* coupling strength *\/$/;"	v	language:C
assign_p	/media/SPACE/PHD/programs/src/Reg_cc.c	/^int assign_p ( void* params, double* o_c, double* b, double* O, double* o_1  )$/;"	f	language:C
assign_p	/media/SPACE/PHD/programs/src/funcs.h	/^int assign_p ( void*, double*, double*, double*, double* ) ;$/;"	p	language:C++
beta	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
cp_mat	/media/SPACE/PHD/programs/src/cp_gen.c	/^int cp_mat ( gsl_matrix* cp_mx , double integrals[] , void* params )$/;"	f	language:C
cp_mat	/media/SPACE/PHD/programs/src/funcs.h	/^int cp_mat ( gsl_matrix*, double*, void* ) ;$/;"	p	language:C++
dynamics	/media/SPACE/PHD/programs/src/main.c	/^const int dynamics = 0 ;                       \/*  0 = Redfield $/;"	v	language:C
entropy_production	/media/SPACE/PHD/programs/src/entropy.c	/^double entropy_production ( const gsl_vector* rho, const gsl_vector* rhoeq, const gsl_matrix* L  )$/;"	f	language:C
entropy_production	/media/SPACE/PHD/programs/src/funcs.h	/^double entropy_production ( const gsl_vector*, const gsl_vector*, const gsl_matrix* ) ;$/;"	p	language:C++
evol	/media/SPACE/PHD/programs/src/evol.c	/^int evol ( double t, gsl_vector* state, double step,$/;"	f	language:C
evol	/media/SPACE/PHD/programs/src/funcs.h	/^int evol ( double, gsl_vector*, double, gsl_odeiv2_evolve*,$/;"	p	language:C++
ex	/media/SPACE/PHD/programs/src/Expi.c	/^double ex ( double t, void* params )$/;"	f	language:C
ex	/media/SPACE/PHD/programs/src/funcs.h	/^double ex ( double, void* ) ;$/;"	p	language:C++
expi	/media/SPACE/PHD/programs/src/Expi.c	/^int expi ( double x, double* result, double* abserr )$/;"	f	language:C
expi	/media/SPACE/PHD/programs/src/funcs.h	/^int expi ( double , double*, double* ) ;$/;"	p	language:C++
expi_plus	/media/SPACE/PHD/programs/src/Expi.c	/^int expi_plus ( double x, double* result, double* abserr )$/;"	f	language:C
expi_plus	/media/SPACE/PHD/programs/src/funcs.h	/^int expi_plus ( double, double*, double* ) ;$/;"	p	language:C++
f_params	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	s	language:C++
first_int	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int first_int ( double* val, double* error, void* params )$/;"	f	language:C
first_int	/media/SPACE/PHD/programs/src/funcs.h	/^int first_int ( double*, double*, void* ) ;$/;"	p	language:C++
fourth_int	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int fourth_int ( double* val, double* err, void* params )$/;"	f	language:C
fourth_int	/media/SPACE/PHD/programs/src/funcs.h	/^int fourth_int ( double* , double* , void* ) ;$/;"	p	language:C++
fu	/media/SPACE/PHD/programs/src/Expi.c	/^double fu ( double t, void* params ) $/;"	f	language:C
fu	/media/SPACE/PHD/programs/src/funcs.h	/^double fu ( double, void* ) ;$/;"	p	language:C++
fu_cau	/media/SPACE/PHD/programs/src/Reg_s0.c	/^double fu_cau ( double k, void* params )$/;"	f	language:C
fu_coth	/media/SPACE/PHD/programs/src/Reg_s0.c	/^double fu_coth ( double k, void* params )$/;"	f	language:C
fu_inv	/media/SPACE/PHD/programs/src/Reg_s0.c	/^double fu_inv ( double k, void* params )$/;"	f	language:C
generator	/media/SPACE/PHD/programs/src/evol.c	/^int generator ( double t, const double y[], double dydt[], void* PARS )$/;"	f	language:C
generator	/media/SPACE/PHD/programs/src/funcs.h	/^int generator ( double, const double*, double*, void* ) ;$/;"	p	language:C++
ham_gen	/media/SPACE/PHD/programs/src/funcs.h	/^int ham_gen ( gsl_matrix*, const double* ) ;$/;"	p	language:C++
ham_gen	/media/SPACE/PHD/programs/src/hamil.c	/^int ham_gen ( gsl_matrix* h, double* o )$/;"	f	language:C
headers_for_intelc	/media/SPACE/PHD/programs/src/Makefile	/^headers_for_intelc = -I\/media\/SPACE\/intel\/mkl\/include -I\/media\/SPACE\/intel\/include\/intel64$/;"	m	language:Make
im_gc0	/media/SPACE/PHD/programs/src/Img_c0.c	/^int im_gc0 ( void* params, double* val, double* error ) $/;"	f	language:C
im_gc0	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gc0 ( void* params, double* val, double* error ) ;$/;"	p	language:C++
im_gcc	/media/SPACE/PHD/programs/src/Img_cc.c	/^int im_gcc ( void* params, double* val, double* error )$/;"	f	language:C
im_gcc	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gcc ( void* params, double* val, double* error ) ;$/;"	p	language:C++
im_gcs	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gcs ( void* params, double* val ) ;$/;"	p	language:C++
im_gcs	Img_cs.c	/^int im_gcs ( void* params, double* val )$/;"	f
im_gs0	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gs0 ( void* params, double* val ) ;$/;"	p	language:C++
im_gs0	Img_s0.c	/^int im_gs0 ( void* params, double* val )$/;"	f
im_gsc	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gsc ( void* params, double* val ) ;$/;"	p	language:C++
im_gsc	Img_sc.c	/^int im_gsc ( void* params, double* val )$/;"	f
im_gss	/media/SPACE/PHD/programs/src/Img_ss.c	/^int im_gss ( void* params, double* val, double* error )$/;"	f	language:C
im_gss	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gss ( void* params, double* val, double* error ) ;$/;"	p	language:C++
initialize	/media/SPACE/PHD/programs/src/evol.c	/^int initialize ( gsl_odeiv2_step* s, gsl_odeiv2_control* c, gsl_odeiv2_evolve* e )$/;"	f	language:C
initialize	/media/SPACE/PHD/programs/src/funcs.h	/^int initialize ( gsl_odeiv2_step* s, gsl_odeiv2_control*, gsl_odeiv2_evolve* ) ;$/;"	p	language:C++
integration	/media/SPACE/PHD/programs/src/funcs.h	/^int integration ( void*, double* ) ;$/;"	p	language:C++
integration	/media/SPACE/PHD/programs/src/integs.c	/^int integration ( void* params, double* integrals )$/;"	f	language:C
jac	/media/SPACE/PHD/programs/src/evol.c	/^int jac ( double t, const double y[], double dfdy[] , double dfdt[], void* PARS )$/;"	f	language:C
jac	/media/SPACE/PHD/programs/src/funcs.h	/^int jac ( double, const double*, double*, double*, void* ) ;$/;"	p	language:C++
k_func	/media/SPACE/PHD/programs/src/Reg_sc.c	/^double k_func ( double k, void* params )$/;"	f	language:C
k_func	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func ( double, void* ) ;$/;"	p	language:C++
k_func	cos_coth.c	/^double k_func ( double k, void* x_ps )$/;"	f
k_func_1	/media/SPACE/PHD/programs/src/Reg_sc.c	/^double k_func_1 ( double k, void* params )$/;"	f	language:C
k_func_1	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_1 ( double , void* ) ;$/;"	p	language:C++
k_func_2	/media/SPACE/PHD/programs/src/Reg_sc.c	/^double k_func_2 ( double k , void* params )$/;"	f	language:C
k_func_2	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_2 ( double , void* ) ;$/;"	p	language:C++
k_func_3	/media/SPACE/PHD/programs/src/Reg_sc.c	/^double k_func_3 ( double k, void* params )$/;"	f	language:C
k_func_3	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_3 ( double , void* ) ;$/;"	p	language:C++
k_func_4	/media/SPACE/PHD/programs/src/Reg_sc.c	/^double k_func_4 ( double k, void* params )$/;"	f	language:C
k_func_4	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_4 ( double , void* ) ;$/;"	p	language:C++
k_integrand	cos_coth.c	/^double k_integrand ( void* params, double k, double w )$/;"	f
k_integration	cos_coth.c	/^double k_integration ( double w, void* params )$/;"	f
libs_for_intelc	/media/SPACE/PHD/programs/src/Makefile	/^libs_for_intelc = -L\/media\/SPACE\/intel\/lib\/intel64 -mkl -lgsl$/;"	m	language:Make
main	/media/SPACE/PHD/programs/src/main.c	/^int main ( int argc, char* argv[] )$/;"	f	language:C
mat_read	/media/SPACE/PHD/programs/src/funcs.h	/^int mat_read ( gsl_matrix*, char* ) ;$/;"	p	language:C++
mat_read	/media/SPACE/PHD/programs/src/mat_file.c	/^int mat_read ( gsl_matrix* mat, char* name )$/;"	f	language:C
mat_write	/media/SPACE/PHD/programs/src/funcs.h	/^int mat_write ( gsl_matrix*, char* ) ;$/;"	p	language:C++
mat_write	/media/SPACE/PHD/programs/src/mat_file.c	/^int mat_write ( gsl_matrix* mat, char* name )$/;"	f	language:C
objects	/media/SPACE/PHD/programs/src/Makefile	/^objects = main.o Reg_cc.o Reg_ss.o Img_cs.o Img_sc.o Reg_c0.o Img_c0.o Img_ss.o Img_cc.o Reg_s0.o Img_s0.o Reg_sc.o red_gen.o integs.o Expi.o evol.o cp_gen.o mat_file.o hamil.o station.o entropy.o$/;"	m	language:Make
om	/media/SPACE/PHD/programs/src/main.c	/^const double om[] = { 0, 0, 0, 1 } ;$/;"	v	language:C
omega_1	/media/SPACE/PHD/programs/src/funcs.h	/^	double omega_1; double alpha; } ;$/;"	m	language:C++	struct:f_params
omega_c	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
omega_c	/media/SPACE/PHD/programs/src/main.c	/^const double omega_c = 1000 ;                  \/* critical ohmic frequency *\/$/;"	v	language:C
r	/media/SPACE/PHD/programs/src/main.c	/^const double r[] = { 1, 0, -0.894, -0.447 } ;  \/* initial state: |z,-> *\/$/;"	v	language:C
re_gc0	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gc0 ( void* params, double* val ) ;$/;"	p	language:C++
re_gc0	Reg_c0.c	/^int re_gc0 ( void* params, double* val)$/;"	f
re_gcc	/media/SPACE/PHD/programs/src/Reg_cc.c	/^int re_gcc ( void* params, double* val )$/;"	f	language:C
re_gcc	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gcc ( void* params, double* val ) ;$/;"	p	language:C++
re_gcs	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int re_gcs ( double* result, double* error, void* params )$/;"	f	language:C
re_gcs	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gcs ( double* result, double* error, void* params ) ;$/;"	p	language:C++
re_gcs	cos_coth.c	/^int re_gcs ( double* result, double* abserr, void* params )$/;"	f
re_gs0	/media/SPACE/PHD/programs/src/Reg_s0.c	/^int re_gs0 ( void* params, double* val, double* error )$/;"	f	language:C
re_gs0	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gs0 ( void* params, double* val, double* error ) ;$/;"	p	language:C++
re_gsc	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int re_gsc ( double* result, double* error, void* params )$/;"	f	language:C
re_gsc	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gsc ( double* result, double* error, void* params ) ;$/;"	p	language:C++
re_gsc	cos_coth.c	/^int re_gsc ( double* result, double* abserr, void* params )$/;"	f
re_gss	/media/SPACE/PHD/programs/src/Reg_ss.c	/^int re_gss ( void* params, double* val )$/;"	f	language:C
re_gss	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gss ( void* params, double* val ) ;$/;"	p	language:C++
red_mat	/media/SPACE/PHD/programs/src/funcs.h	/^int red_mat ( gsl_matrix* , double* , void* ) ;$/;"	p	language:C++
red_mat	/media/SPACE/PHD/programs/src/red_gen.c	/^int red_mat ( gsl_matrix* red_mx , double integrals[] , void* params )$/;"	f	language:C
second_int	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int second_int ( double* val, double* error, void* params )$/;"	f	language:C
second_int	/media/SPACE/PHD/programs/src/funcs.h	/^int second_int ( double* , double* , void* ) ;$/;"	p	language:C++
stationary	/media/SPACE/PHD/programs/src/funcs.h	/^int stationary ( const gsl_matrix* , gsl_vector*  ) ;$/;"	p	language:C++
stationary	/media/SPACE/PHD/programs/src/station.c	/^int stationary ( const gsl_matrix* M, gsl_vector* X )$/;"	f	language:C
step	/media/SPACE/PHD/programs/src/main.c	/^const double step = 0.01 ;                     \/* time step *\/$/;"	v	language:C
t_end	/media/SPACE/PHD/programs/src/main.c	/^const double t_end = 300 ;                     \/* time end *\/$/;"	v	language:C
third_int	/media/SPACE/PHD/programs/src/Reg_sc.c	/^int third_int ( double* val, double* err, void* params )$/;"	f	language:C
third_int	/media/SPACE/PHD/programs/src/funcs.h	/^int third_int ( double* , double* , void* ) ;$/;"	p	language:C++
w_integrand_cs	cos_coth.c	/^double w_integrand_cs ( double w, void* params )$/;"	f
w_integrand_sc	cos_coth.c	/^double w_integrand_sc ( double w, void* params )$/;"	f
