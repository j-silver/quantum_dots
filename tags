!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	/media/SPACE/PHD/programs/src/Makefile	/^CC = gcc$/;"	m	language:Make
CFLAGS	/media/SPACE/PHD/programs/src/Makefile	/^CFLAGS = -O2 -march=core2 -Wall -ansi -Wpointer-arith -Wcast-qual -Wcast-align -Wshadow -Wconversion -Wmissing-prototypes -Wstrict-prototypes -fno-common #-g -W -pedantic -Wwrite-strings -Wnested-externs -fshort-enums $/;"	m	language:Make
CPPFLAGS	/media/SPACE/PHD/programs/src/Makefile	/^	CPPFLAGS = $(headers_for_intelc)$/;"	m	language:Make
D	/media/SPACE/PHD/programs/src/current_tdel.c	/^const double D = 1 ;                            \/* pumping amplitude (GHz) *\/$/;"	v	language:C
D	/media/SPACE/PHD/programs/src/main.c	/^const double D = 1 ;                            \/* pumping amplitude (GHz) *\/$/;"	v	language:C
LDLIBS	/media/SPACE/PHD/programs/src/Makefile	/^	LDLIBS = $(libs_for_intelc)$/;"	m	language:Make
LDLIBS	/media/SPACE/PHD/programs/src/Makefile	/^LDLIBS = -lgsl -lgslcblas -lm$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^	MAIN = main-clang$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^	MAIN = main-intel$/;"	m	language:Make
MAIN	/media/SPACE/PHD/programs/src/Makefile	/^MAIN = main$/;"	m	language:Make
Omega	/media/SPACE/PHD/programs/src/current_tdel.c	/^const double Omega = 2 ;                        \/* pumping frequency (GHz) *\/$/;"	v	language:C
Omega	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
Omega	/media/SPACE/PHD/programs/src/main.c	/^const double Omega = 2 ;                        \/* pumping frequency (GHz) *\/$/;"	v	language:C
POW_2	/media/SPACE/PHD/programs/src/funcs.h	37;"	d	language:C++
T	/media/SPACE/PHD/programs/src/main.c	/^const double T = 0.1 ;                          \/* temperature *\/$/;"	v	language:C
WS_SZ	/media/SPACE/PHD/programs/src/funcs.h	35;"	d	language:C++
alpha	/media/SPACE/PHD/programs/src/current_tdel.c	/^const double alpha = 5e-3 ;                     \/* coupling strength *\/$/;"	v	language:C
alpha	/media/SPACE/PHD/programs/src/funcs.h	/^	double omega_1; double alpha; } ;$/;"	m	language:C++	struct:f_params
alpha	/media/SPACE/PHD/programs/src/main.c	/^const double alpha = 5e-3 ;                     \/* coupling strength *\/$/;"	v	language:C
assign_p	/media/SPACE/PHD/programs/src/funcs.h	/^int assign_p ( void*, double*, double*, double*, double* ) ;$/;"	p	language:C++
assign_p	Reg_cc.c	/^int assign_p ( void* params, double* o_c, double* b, double* O, double* o_1  )$/;"	f
beta	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
bloch_vector	polar.c	/^int bloch_vector ( gsl_vector* v, unsigned double r, double theta, double phi )$/;"	f
cp_mat	/media/SPACE/PHD/programs/src/funcs.h	/^int cp_mat ( gsl_matrix*, void* ) ;$/;"	p	language:C++
cp_mat	cp_gen.c	/^int cp_mat ( gsl_matrix* cp_mx , void* params )$/;"	f
current	/media/SPACE/PHD/programs/src/funcs.h	/^double current ( const gsl_vector* ) ;$/;"	p	language:C++
current	current.c	/^double current ( const gsl_vector* state )$/;"	f
current_cp	/media/SPACE/PHD/programs/src/current_tdel.c	/^double current_cp ( double T, void* params )$/;"	f	language:C
current_cp	/media/SPACE/PHD/programs/src/funcs.h	/^double current_cp ( double, void* ) ;$/;"	p	language:C++
current_red	/media/SPACE/PHD/programs/src/current_tdel.c	/^double current_red ( double T, void* params )$/;"	f	language:C
current_red	/media/SPACE/PHD/programs/src/funcs.h	/^double current_red ( double, void* ) ;$/;"	p	language:C++
current_temp	/media/SPACE/PHD/programs/src/funcs.h	/^double current_temp ( double ) ;$/;"	p	language:C++
data_files	/media/SPACE/PHD/programs/src/Makefile	/^data_files = REDFIELD_MATRIX CP_MATRIX RED-EVOLUTION.dat RED-CURRENT.dat RED-ENTROPY.dat CP-EVOLUTION.dat CP-CURRENT.dat CP-ENTROPY.dat INTEGRALS.dat RED-STAT-CURR-T.dat CP-STAT-CURR-T.dat$/;"	m	language:Make
entropy_production	/media/SPACE/PHD/programs/src/funcs.h	/^double entropy_production ( const gsl_vector*, const gsl_vector*, const gsl_matrix* ) ;$/;"	p	language:C++
entropy_production	entropy.c	/^double entropy_production ( const gsl_vector* rho, const gsl_vector* rhoeq,$/;"	f
evol	/media/SPACE/PHD/programs/src/funcs.h	/^int evol ( double, gsl_vector*, double, gsl_odeiv2_evolve*,$/;"	p	language:C++
evol	evol.c	/^int evol ( double t, gsl_vector* state, double step,$/;"	f
ex	/media/SPACE/PHD/programs/src/funcs.h	/^double ex ( double, void* ) ;$/;"	p	language:C++
ex	Expi.c	/^double ex ( double t, void* params )$/;"	f
expi	/media/SPACE/PHD/programs/src/funcs.h	/^int expi ( double , double*, double* ) ;$/;"	p	language:C++
expi	Expi.c	/^int expi ( double x, double* result, double* abserr )$/;"	f
expi_plus	/media/SPACE/PHD/programs/src/funcs.h	/^int expi_plus ( double, double*, double* ) ;$/;"	p	language:C++
expi_plus	Expi.c	/^int expi_plus ( double x, double* result, double* abserr )$/;"	f
f_params	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	s	language:C++
first_int	/media/SPACE/PHD/programs/src/funcs.h	/^int first_int ( double*, double*, void* ) ;$/;"	p	language:C++
first_int	Reg_sc.c	/^int first_int ( double* val, double* error, void* params )$/;"	f
fourth_int	/media/SPACE/PHD/programs/src/funcs.h	/^int fourth_int ( double* , double* , void* ) ;$/;"	p	language:C++
fourth_int	Reg_sc.c	/^int fourth_int ( double* val, double* err, void* params )$/;"	f
fu	/media/SPACE/PHD/programs/src/funcs.h	/^double fu ( double, void* ) ;$/;"	p	language:C++
fu	Expi.c	/^double fu ( double t, void* params ) $/;"	f
fu_cau	/media/SPACE/PHD/programs/src/funcs.h	/^double fu_cau ( double, void* ) ;$/;"	p	language:C++
fu_cau	Reg_s0.c	/^double fu_cau ( double k, void* params )$/;"	f
fu_coth	/media/SPACE/PHD/programs/src/funcs.h	/^double fu_coth ( double, void* ) ;$/;"	p	language:C++
fu_coth	Reg_s0.c	/^double fu_coth ( double k, void* params )$/;"	f
fu_inv	/media/SPACE/PHD/programs/src/funcs.h	/^double fu_inv ( double, void* ) ;$/;"	p	language:C++
fu_inv	Reg_s0.c	/^double fu_inv ( double k, void* params )$/;"	f
gamma0	/media/SPACE/PHD/programs/src/main.c	/^const double gamma0 = 0.05 ;                    \/* energy hopping between sites$/;"	v	language:C
generator	/media/SPACE/PHD/programs/src/funcs.h	/^int generator ( double, const double*, double*, void* ) ;$/;"	p	language:C++
generator	evol.c	/^int generator ( double t, const double y[], double dydt[], void* PARS )$/;"	f
ham_gen	/media/SPACE/PHD/programs/src/funcs.h	/^int ham_gen ( gsl_matrix*, const double* ) ;$/;"	p	language:C++
ham_gen	hamil.c	/^int ham_gen ( gsl_matrix* h, const double* o )$/;"	f
headers_for_intelc	/media/SPACE/PHD/programs/src/Makefile	/^headers_for_intelc = -I\/media\/SPACE\/intel\/mkl\/include -I\/media\/SPACE\/intel\/include\/intel64$/;"	m	language:Make
im_gc0	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gc0 ( void* params, double* val, double* error ) ;$/;"	p	language:C++
im_gc0	Img_c0.c	/^int im_gc0 ( void* params, double* val, double* error ) $/;"	f
im_gcc	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gcc ( void* params, double* val, double* error ) ;$/;"	p	language:C++
im_gcc	Img_cc.c	/^int im_gcc ( void* params, double* val, double* error )$/;"	f
im_gcs	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gcs ( void* params, double* val ) ;$/;"	p	language:C++
im_gcs	Img_cs.c	/^int im_gcs ( void* params, double* val )$/;"	f
im_gs0	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gs0 ( void* params, double* val ) ;$/;"	p	language:C++
im_gs0	Img_s0.c	/^int im_gs0 ( void* params, double* val )$/;"	f
im_gsc	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gsc ( void* params, double* val ) ;$/;"	p	language:C++
im_gsc	Img_sc.c	/^int im_gsc ( void* params, double* val )$/;"	f
im_gss	/media/SPACE/PHD/programs/src/funcs.h	/^int im_gss ( void* params, double* val, double* error ) ;$/;"	p	language:C++
im_gss	Img_ss.c	/^int im_gss ( void* params, double* val, double* error )$/;"	f
integration	/media/SPACE/PHD/programs/src/funcs.h	/^int integration ( void*, double* ) ;$/;"	p	language:C++
integration	integs.c	/^int integration ( void* params, double* integrals )$/;"	f
jac	/media/SPACE/PHD/programs/src/funcs.h	/^int jac ( double, const double*, double*, double*, void* ) ;$/;"	p	language:C++
jac	evol.c	/^int jac ( double t, const double y[], double dfdy[] , double dfdt[], void* PARS )$/;"	f
k_func	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func ( double, void* ) ;$/;"	p	language:C++
k_func	Reg_sc.c	/^double k_func ( double k, void* params )$/;"	f
k_func_1	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_1 ( double , void* ) ;$/;"	p	language:C++
k_func_1	Reg_sc.c	/^double k_func_1 ( double k, void* params )$/;"	f
k_func_2	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_2 ( double , void* ) ;$/;"	p	language:C++
k_func_2	Reg_sc.c	/^double k_func_2 ( double k , void* params )$/;"	f
k_func_3	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_3 ( double , void* ) ;$/;"	p	language:C++
k_func_3	Reg_sc.c	/^double k_func_3 ( double k, void* params )$/;"	f
k_func_4	/media/SPACE/PHD/programs/src/funcs.h	/^double k_func_4 ( double , void* ) ;$/;"	p	language:C++
k_func_4	Reg_sc.c	/^double k_func_4 ( double k, void* params )$/;"	f
libs_for_intelc	/media/SPACE/PHD/programs/src/Makefile	/^libs_for_intelc = -L\/media\/SPACE\/intel\/lib\/intel64 -mkl -lgsl$/;"	m	language:Make
main	/media/SPACE/PHD/programs/src/current_tdel.c	/^int main ( int argc, char *argv[] )$/;"	f	language:C
main	/media/SPACE/PHD/programs/src/main.c	/^int main ( int argc, char* argv[] )$/;"	f	language:C
mat_read	/media/SPACE/PHD/programs/src/funcs.h	/^int mat_read ( gsl_matrix*, char* ) ;$/;"	p	language:C++
mat_read	mat_file.c	/^int mat_read ( gsl_matrix* mat, char* name )$/;"	f
mat_write	/media/SPACE/PHD/programs/src/funcs.h	/^int mat_write ( gsl_matrix*, char* ) ;$/;"	p	language:C++
mat_write	mat_file.c	/^int mat_write ( gsl_matrix* mat, char* name )$/;"	f
objects	/media/SPACE/PHD/programs/src/Makefile	/^objects = main.o Reg_cc.o Reg_ss.o Img_cs.o Img_sc.o Reg_c0.o Img_c0.o Img_ss.o Img_cc.o Reg_s0.o Img_s0.o Reg_sc.o red_gen.o integs.o Expi.o evol.o cp_gen.o mat_file.o hamil.o station.o entropy.o write.o $/;"	m	language:Make
omega_1	/media/SPACE/PHD/programs/src/funcs.h	/^	double omega_1; double alpha; } ;$/;"	m	language:C++	struct:f_params
omega_c	/media/SPACE/PHD/programs/src/current_tdel.c	/^const double omega_c = 1000 ;                   \/* critical ohmic frequency *\/$/;"	v	language:C
omega_c	/media/SPACE/PHD/programs/src/funcs.h	/^struct f_params { double omega_c ; double beta ; double Omega ;$/;"	m	language:C++	struct:f_params
omega_c	/media/SPACE/PHD/programs/src/main.c	/^const double omega_c = 1000 ;                   \/* critical ohmic frequency *\/$/;"	v	language:C
polars	polar.c	/^int polars ( unsigned double* r, double* theta, double* phi, const gsl_vector* v )$/;"	f
r	/media/SPACE/PHD/programs/src/main.c	/^const double r[] = { 1, 0, -0.894, -0.447 } ;   		\/* initial state: |z,-> *\/$/;"	v	language:C
re_gc0	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gc0 ( void* params, double* val ) ;$/;"	p	language:C++
re_gc0	Reg_c0.c	/^int re_gc0 ( void* params, double* val)$/;"	f
re_gcc	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gcc ( void* params, double* val ) ;$/;"	p	language:C++
re_gcc	Reg_cc.c	/^int re_gcc ( void* params, double* val )$/;"	f
re_gcs	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gcs ( double* result, double* error, void* params ) ;$/;"	p	language:C++
re_gcs	Reg_sc.c	/^int re_gcs ( double* result, double* error, void* params )$/;"	f
re_gs0	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gs0 ( void* params, double* val, double* error ) ;$/;"	p	language:C++
re_gs0	Reg_s0.c	/^int re_gs0 ( void* params, double* val, double* error )$/;"	f
re_gsc	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gsc ( double* result, double* error, void* params ) ;$/;"	p	language:C++
re_gsc	Reg_sc.c	/^int re_gsc ( double* result, double* error, void* params )$/;"	f
re_gss	/media/SPACE/PHD/programs/src/funcs.h	/^int re_gss ( void* params, double* val ) ;$/;"	p	language:C++
re_gss	Reg_ss.c	/^int re_gss ( void* params, double* val )$/;"	f
red_mat	/media/SPACE/PHD/programs/src/funcs.h	/^int red_mat ( gsl_matrix* , void* ) ;$/;"	p	language:C++
red_mat	red_gen.c	/^int red_mat ( gsl_matrix* red_mx , void* params )$/;"	f
save_integrals	/media/SPACE/PHD/programs/src/funcs.h	/^int save_integrals ( void* ) ;$/;"	p	language:C++
save_integrals	write.c	/^int save_integrals ( void* params )$/;"	f
save_matrices	/media/SPACE/PHD/programs/src/funcs.h	/^int save_matrices ( void* ) ;$/;"	p	language:C++
save_matrices	write.c	/^int save_matrices ( void* params )$/;"	f
second_int	/media/SPACE/PHD/programs/src/funcs.h	/^int second_int ( double* , double* , void* ) ;$/;"	p	language:C++
second_int	Reg_sc.c	/^int second_int ( double* val, double* error, void* params )$/;"	f
stationary	/media/SPACE/PHD/programs/src/funcs.h	/^int stationary ( const gsl_matrix* , gsl_vector*  ) ;$/;"	p	language:C++
stationary	station.c	/^int stationary ( const gsl_matrix* M, gsl_vector* stat_state )$/;"	f
step	/media/SPACE/PHD/programs/src/main.c	/^const double step = .01 ;                       \/* time step *\/$/;"	v	language:C
t_end	/media/SPACE/PHD/programs/src/main.c	/^const double t_end = 300 ;                      \/* time end *\/$/;"	v	language:C
third_int	/media/SPACE/PHD/programs/src/funcs.h	/^int third_int ( double* , double* , void* ) ;$/;"	p	language:C++
third_int	Reg_sc.c	/^int third_int ( double* val, double* err, void* params )$/;"	f
write_cp_curr_T	/media/SPACE/PHD/programs/src/current_tdel.c	/^int write_cp_curr_T ( void* params )$/;"	f	language:C
write_cp_curr_T	/media/SPACE/PHD/programs/src/funcs.h	/^int write_cp_curr_T ( void* ) ;$/;"	p	language:C++
write_red_curr_T	/media/SPACE/PHD/programs/src/current_tdel.c	/^int write_red_curr_T ( void* params )$/;"	f	language:C
write_red_curr_T	/media/SPACE/PHD/programs/src/funcs.h	/^int write_red_curr_T ( void* ) ;$/;"	p	language:C++
